/* KEY POSITIONS (using keypos_def helpers)
╭─────────────────────┬─────────────────────╮
│ LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 │
│ LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 │
│ LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 │
╰───────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────╯
        ╰─────────────┴─────────────╯       */

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS, TERM, QUICKTAP, ...) \
  combo_##NAME { \
    timeout-ms = <TERM>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
    require-prior-idle-ms = <QUICKTAP>; \
    __VA_ARGS__ \
  };

#define COMBO_TERM_FAST 30
#define COMBO_TERM_SLOW 60

#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50

/ {
  combos {
    compatible = "zmk,combos";

    // function keys

    // Combos overlapping HRMs are set up as hold-taps themselves to allow for instantaneous
    // chording of mods. Custom hold-tap instances can be bootstrapped on the go using the
    // 8-argument version of ZMK_COMBO defined in base.keymap.
    COMBO(tab,    &kp TAB,       RB1 RB2,     COL QWE SYM,  COMBO_TERM_FAST, COMBO_IDLE_FAST)
    COMBO(bspc,   &kp BSPC,      RM1 RM2,     COL QWE SYM,  COMBO_TERM_FAST, COMBO_IDLE_FAST)
    COMBO(ret,    &kp RET,       LM3 LM2 LM1, COL QWE,      COMBO_TERM_FAST, COMBO_IDLE_FAST)

    // symbols
    COMBO(semi,   &kp SEMI,      RB2 RB3,     COL QWE SYM,  COMBO_TERM_FAST, COMBO_IDLE_FAST)
    COMBO(bslh,   &kp BSLH,      LM3 LM2 LM1, SYM,          COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    COMBO(pipe,   &kp PIPE,      LB3 LB2 LB1, SYM,          COMBO_TERM_SLOW, COMBO_IDLE_FAST)

    COMBO(lbkt,   &kp LBKT,      LT3 LT2,     COL QWE SYM,  COMBO_TERM_FAST, COMBO_IDLE_FAST)
    COMBO(rbkt,   &kp RBKT,      LT2 LT1,     COL QWE SYM,  COMBO_TERM_FAST, COMBO_IDLE_FAST)
    COMBO(lpar,   &kp LPAR,      LM3 LM2,     COL QWE SYM,  COMBO_TERM_FAST, COMBO_IDLE_FAST)
    COMBO(rpar,   &kp RPAR,      LM2 LM1,     COL QWE SYM,  COMBO_TERM_FAST, COMBO_IDLE_FAST)
    COMBO(lbrc,   &kp LBRC,      LB3 LB2,     COL QWE SYM,  COMBO_TERM_FAST, COMBO_IDLE_FAST)
    COMBO(rbrc,   &kp RBRC,      LB2 LB1,     COL QWE SYM,  COMBO_TERM_FAST, COMBO_IDLE_FAST)

    // layers
    COMBO(mouse,  &tog MSE,      LB3 LB2 LB1, COL QWE MSE,  COMBO_TERM_FAST, COMBO_IDLE_FAST)

    // combinations
    COMBO(capswd, &caps_word,    LM1 RM1,     COL QWE,      COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    COMBO(caps,   &kp CAPS,      LM0 RM0,     COL QWE,      COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    COMBO(lock,   &kp LG(L),     RT1 RM4,     COL QWE,      COMBO_TERM_SLOW, COMBO_IDLE_FAST)
    COMBO(undo,   &kp LC(Z),     LB3 LB2,     NAV,          COMBO_TERM_SLOW, COMBO_IDLE_FAST)

    // media
    COMBO(play,   &kp C_PP,      RB1 RB2,     NAV,          COMBO_TERM_SLOW, COMBO_IDLE_FAST)

    // misc
  };
};
